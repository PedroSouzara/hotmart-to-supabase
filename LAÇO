import fetch from 'node-fetch';

export default async function handler(req, res) {
  if (req.method !== 'POST') {
    return res.status(405).json({
      message: 'Método não permitido. Use POST.'
    });
  }

  try {
    // A Hotmart envia os dados dentro de req.body.data
    const { buyer } = req.body.data || {};

    if (!buyer || !buyer.email || typeof buyer.email !== 'string') {
      return res.status(400).json({
        message: 'Dados do comprador inválidos. O campo "buyer.email" é obrigatório.'
      });
    }

    const email = buyer.email.trim().toLowerCase();

    const newEntry = {
      email: email,
      is_active: true,
      notes: 'Cadastro automático via Webhook da Hotmart'
    };

    const supabaseResponse = await fetch(`${process.env.SUPABASE_URL}/rest/v1/authorized_buyers`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'apikey': process.env.SUPABASE_API_KEY,
        'Authorization': `Bearer ${process.env.SUPABASE_API_KEY}`,
        'Prefer': 'return=minimal'
      },
      body: JSON.stringify(newEntry)
    });

    if (supabaseResponse.ok) {
      return res.status(200).json({
        message: 'Cadastro realizado com sucesso na Supabase.',
        email: email
      });
    } else {
      const errorText = await supabaseResponse.text();
      return res.status(500).json({
        message: 'Erro ao cadastrar na Supabase.',
        error: errorText
      });
    }

  } catch (error) {
    return res.status(500).json({
      message: 'Erro interno no servidor.',
      error: error.message
    });
  }
}
